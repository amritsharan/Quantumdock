// refine-docking-poses-with-vqe.ts
'use server';

/**
 * @fileOverview Refines docking poses using Variational Quantum Eigensolver (VQE).
 *
 * This file defines a Genkit flow that refines the top docking poses generated by classical methods
 * using VQE to calculate more accurate binding energies, thereby improving the accuracy of pose prediction.
 *
 * - refineDockingPosesWithVQE - The main function to refine docking poses.
 * - RefineDockingPosesWithVQEInput - The input type for the refineDockingPosesWithVQE function.
 * - RefineDockingPosesWithVQEOutput - The output type for the refineDockingPosesWithVQE function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Define the input schema
const RefineDockingPosesWithVQEInputSchema = z.object({
  proteinStructure: z
    .string()
    .describe('The protein structure in PDB format.'),
  ligandPose: z
    .string()
    .describe(
      "The ligand pose generated from classical docking, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  numPosesToRefine: z
    .number()
    .describe('The number of top poses to refine using VQE.')
    .default(5),
});
export type RefineDockingPosesWithVQEInput = z.infer<typeof RefineDockingPosesWithVQEInputSchema>;

// Define the output schema
const RefineDockingPosesWithVQEOutputSchema = z.object({
  refinedPoses: z
    .array(z.string())
    .describe('The refined ligand poses with updated binding energies.'),
  vqeCalculationDetails: z
    .string()
    .optional()
    .describe('Details about the VQE calculation, e.g., convergence info.'),
});
export type RefineDockingPosesWithVQEOutput = z.infer<typeof RefineDockingPosesWithVQEOutputSchema>;

// Exported function to refine docking poses with VQE
export async function refineDockingPosesWithVQE(
  input: RefineDockingPosesWithVQEInput
): Promise<RefineDockingPosesWithVQEOutput> {
  return refineDockingPosesWithVQEFlow(input);
}

// Define the prompt
const refineDockingPosesPrompt = ai.definePrompt({
  name: 'refineDockingPosesPrompt',
  input: {schema: RefineDockingPosesWithVQEInputSchema},
  output: {schema: RefineDockingPosesWithVQEOutputSchema},
  prompt: `You are an expert in computational chemistry and quantum computing. Given a protein structure and a ligand pose,
you will refine the ligand pose using Variational Quantum Eigensolver (VQE) to calculate more accurate binding energies.

Protein Structure:
{{{proteinStructure}}}

Ligand Pose:
{{media url=ligandPose}}

Number of Poses to Refine: {{numPosesToRefine}}

Based on the VQE calculations, provide the refined ligand poses with updated binding energies and any relevant details
about the VQE calculation process.

Ensure the refined poses are optimized for better binding affinity compared to the initial poses.`,
});

// Define the Genkit flow
const refineDockingPosesWithVQEFlow = ai.defineFlow(
  {
    name: 'refineDockingPosesWithVQEFlow',
    inputSchema: RefineDockingPosesWithVQEInputSchema,
    outputSchema: RefineDockingPosesWithVQEOutputSchema,
  },
  async input => {
    // Call the prompt to get the refined poses
    const {output} = await refineDockingPosesPrompt(input);
    // Return the output
    return output!;
  }
);
