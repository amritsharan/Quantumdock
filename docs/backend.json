
{
  "entities": {
    "UserProfile": {
      "title": "User Profile",
      "type": "object",
      "description": "Represents a user's profile.",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The user's unique ID from Firebase Auth."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "displayName": {
          "type": "string",
          "description": "The user's display name."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the user profile was created."
        }
      },
      "required": ["uid", "email", "createdAt"]
    },
    "Molecule": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Molecule",
      "type": "object",
      "description": "Represents a molecule structure.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the molecule."
        },
        "smiles": {
          "type": "string",
          "description": "SMILES string representation of the molecule."
        },
        "pdbFile": {
          "type": "string",
          "description": "File path or content of the PDB file for the molecule, if available."
        },
        "name": {
          "type": "string",
          "description": "Name of the molecule."
        }
      },
      "required": [
        "id"
      ]
    },
    "TargetProtein": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TargetProtein",
      "type": "object",
      "description": "Represents a biological target protein.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the target protein."
        },
        "name": {
          "type": "string",
          "description": "Name of the target protein."
        },
        "sequence": {
          "type": "string",
          "description": "Amino acid sequence of the target protein."
        },
        "pdbFile": {
          "type": "string",
          "description": "File path or content of the PDB file for the target protein."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "DockingResult": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DockingResult",
      "type": "object",
      "description": "Represents the result of a molecular docking simulation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the docking result."
        },
        "moleculeId": {
          "type": "string",
          "description": "Reference to the Molecule. (Relationship: Molecule 1:N DockingResult)"
        },
        "targetProteinId": {
          "type": "string",
          "description": "Reference to the TargetProtein. (Relationship: TargetProtein 1:N DockingResult)"
        },
        "classicalDockingScore": {
          "type": "number",
          "description": "Score from classical molecular docking (e.g., AutoDock)."
        },
        "quantumRefinementScore": {
          "type": "number",
          "description": "Score after quantum refinement with VQE/QAOA."
        },
        "bindingAffinity": {
          "type": "number",
          "description": "Predicted binding affinity based on quantum-refined energies."
        },
        "poseFile": {
          "type": "string",
          "description": "File path or content of the pose file (e.g., PDB) representing the docked complex."
        }
      },
      "required": [
        "id",
        "moleculeId",
        "targetProteinId"
      ]
    }
  },
  "auth": {
    "providers": ["password"]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": {
        "$ref": "#/entities/UserProfile"
      },
      "description": "Stores user profile information."
    },
    "/molecules/{moleculeId}": {
      "schema": {
        "$ref": "#/entities/Molecule"
      },
      "description": "Stores molecule data."
    },
    "/target_proteins/{targetProteinId}": {
      "schema": {
        "$ref": "#/entities/TargetProtein"
      },
      "description": "Stores target protein data."
    },
    "/docking_results/{dockingResultId}": {
      "schema": {
        "$ref": "#/entities/DockingResult"
      },
      "description": "Stores docking result data."
    }
  }
}
