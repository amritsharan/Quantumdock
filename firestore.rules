/**
 * @fileoverview Firestore Security Rules for QuantumDock application.
 *
 * Core Philosophy:
 * This ruleset provides unrestricted access to the data entities by default,
 * meaning no authorization is enforced beyond the default (all authenticated users can read/write data).
 *
 * Data Structure:
 * - /molecules/{moleculeId}: Stores molecule data.
 * - /target_proteins/{targetProteinId}: Stores target protein data.
 * - /docking_results/{dockingResultId}: Stores docking result data.
 * - /loginHistory/{loginEventId}: Stores user login events.
 *
 * Key Security Decisions:
 * - Unrestricted access: All authenticated users can read and write data in all collections.
 * - No specific authorization fields are denormalized.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to read and write molecule data.
     * @path /molecules/{moleculeId}
     * @allow (get, list) Any authenticated user can read molecule data.
     * @allow (create, update, delete) Any authenticated user can write molecule data.
     * @deny (create, update, delete) Not applicable, all authenticated users are allowed.
     * @principle Unrestricted access for authenticated users.
     */
    match /molecules/{moleculeId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write target protein data.
     * @path /target_proteins/{targetProteinId}
     * @allow (get, list) Any authenticated user can read target protein data.
     * @allow (create, update, delete) Any authenticated user can write target protein data.
     * @deny (create, update, delete) Not applicable, all authenticated users are allowed.
     * @principle Unrestricted access for authenticated users.
     */
    match /target_proteins/{targetProteinId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write docking result data.
     * @path /docking_results/{dockingResultId}
     * @allow (get, list) Any authenticated user can read docking result data.
     * @allow (create, update, delete) Any authenticated user can write docking result data.
     * @deny (create, update, delete) Not applicable, all authenticated users are allowed.
     * @principle Unrestricted access for authenticated users.
     */
    match /docking_results/{dockingResultId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

     /**
      * @description Allows any authenticated user to read and write login event data.
      * @path /loginHistory/{loginEventId}
      * @allow (get, list) Any authenticated user can read login event data.
      * @allow (create, update, delete) Any authenticated user can write login event data.
      * @deny (create, update, delete) Not applicable, all authenticated users are allowed.
      * @principle Unrestricted access for authenticated users.
      */
    match /loginHistory/{loginEventId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }


    // ---- Helper functions ----
    function isSignedIn() {
      return request.auth != null;
    }
  }
}